Kubernetes


Scale up and down
the platform need to orchestrate the connectivity between the container and automatic scale up

+ Docker Swarm 
+ Kubernetes
+ Mesos
 
Highly avaiable

Kubernetes Architecture
Node is a machine, physical or virtual, on which Kubernetes is installed
-> WORKER MACHINE -> where container will be launched by Kubernetes



Cluster is a set of nodes grouped together, 1 node fails -> app still working
moreover, sharing load at well

Master is another node with Kubernetes installed in it and configured as a master

Master watches over the nodes in the cluster and is reponsible for actual orchestration of container on nodes


Kubernetes components
 1. API Server : front end for Kubernetes. Users manage devices, command line through API server with the cluster
 2. etcd: Key-value store to store all data used to manage the cluster
 3. kubelet: agent that run on each node make sure the containes are running on the node as expected
 4. Container Runtime: basic software is used to run container -> happen to be docker
 5. Controller: notice and respond when nodes, containers, endpoint down -> create a new one instead
 6. Scheduler: is reponsible for distributing containers across multiple nodes: create new container and assigns them to nodes
 
 Master                            Node
 1. kube-apiserver<-------------> 1. kubelet
 2. etcd                          2. Container Runtime
 3. controller
 4. scheduler
 
-------------------------------------------------------------------
kubectl command : Deploy and manage app on the cluster
-------------------------------------------------------------------
kubectl run hello-minikube : deploy app
kubectl cluster-info : inspect information of cluster, query etcd info
kubectl get nodes : list all node on cluster



 
 
 
 